version: "3.7"

volumes:
  nginx_secrets:
  postgres_data:

services:
  postgres:
    image: postgis/postgis:14-master
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: main
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-u", "user"]
      interval: 10s
      timeout: 5s

  redis:
    image: redis
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s

  backend:
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      INDEX_HOST: http://indexes:8080
      PORT: 8000
      DB_HOST: postgres
      DB_USERNAME: user
      DB_PASSWORD: password
      DB_NAME: main
      DATABASE_URL: postgres://user:password@postgres:5432/main
    healthcheck:
      test: ["CMD", "curl", "-s", "http://backend:8000"]
      interval: 15s
      start_period: 15s

  frontend:
    environment:
      PORT: 3000

  nginx:
    image: jonasal/nginx-certbot:3
    environment:
      CERTBOT_EMAIL: mtoyxmfl6@mozmail.com
      RENEWAL_INTERVAL: 1h
      HOST: arqui-de-software-2022-1-primera-entre.ga
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/templates/default.conf.template
      - nginx_secrets:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "curl", "-s", "http://nginx:80"]
      interval: 1m30s
      start_period: 30s

  indexes:
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PORT: 8080
      DB_HOST: postgres
      DB_USERNAME: user
      DB_PASSWORD: password
      DB_NAME: main
      REDIS_URL: redis:redis:6379
      DATABASE_URL: postgres://user:password@postgres:5432/main
