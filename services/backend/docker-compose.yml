version: "3"

services:
  db:
    image: cmihai/postgis
    restart: always
    volumes:
      - ./.docker/volumes/database:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:                 
      - app-network

  app:
    build: .
    env_file:
      - .env
    volumes: 
      - .:/usr/app
      - /usr/app/node_modules
    depends_on:
      - db
    command: sh -c "yarn sequelize-cli db:migrate:undo:all && 
      yarn sequelize-cli db:migrate &&
      yarn sequelize-cli db:seed:all &&
      yarn start"
    networks:
      - app-network
    ports:
      - 3000:3000

  nginx:
    image: nginx
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - app
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:                     
  app-network:
    driver: bridge